C51 COMPILER V9.06   NRF24L01_TX                                                           08/14/2017 21:12:42 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE NRF24L01_TX
OBJECT MODULE PLACED IN .\Output\NRF24L01_TX.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE source code\NRF24L01_TX.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Test;.\Incl
                    -ude;.\source code) DEBUG OBJECTEXTEND PRINT(.\Listings\NRF24L01_TX.lst) TABS(2) OBJECT(.\Output\NRF24L01_TX.obj)

line level    source

   1          #include <stc12c2052ad.h>
   2          #include <stdio.h>
   3          #include "MYTYPE.h"
   4          #include "Delay.h"
   5          #include "NRF24L01_TX.h"
   6          
   7          //NRF24L01 只 发送程序
   8          
   9          
  10          uchar const RX_ADDRESS[RX_ADR_WITH] = {0x12,0x21,0xaa,0x34,0x43};   // 接收地址
  11          uchar const TX_ADDRESS[TX_ADR_WITH] = {0x12,0x21,0xaa,0x34,0x43};   // 发送地址
  12          
  13          //  SPI写一字节
  14          uchar SPI_RW(uchar dat)
  15          {
  16   1        uchar i;
  17   1        for(i = 0; i < 8; i++)
  18   1        {
  19   2          MOSI = (dat&0x80);  // dat最高位放入数据线
  20   2          dat = dat<<1;   // dat左移1位
  21   2          SCK = 1;      // 拉高时钟，数据送入从机（上升沿读入）
  22   2          dat |= MISO;      // 接收从机传来数据
  23   2          SCK = 0;      // 拉低时钟        （下降沿输出）
  24   2        }
  25   1        return(dat);      // 返回NRF24L01状态
  26   1      }
  27          
  28          //  SPI写寄存器值
  29          uchar SPI_RW_Reg(uchar reg,uchar value)
  30          {
  31   1        uchar status;
  32   1        CSN = 0;        // CSN置低，开始传输数据
  33   1        status = SPI_RW(reg); // 选择寄存器，同时返回状态字
  34   1        SPI_RW(value);      // 写入数据到寄存器
  35   1        CSN = 1;        // CSN置高，结束数据传输
  36   1        return(status);
  37   1      }
  38          
  39          //  SPI读一字节 
  40          uchar SPI_Read(uchar reg)
  41          {
  42   1        uchar reg_value;      // 存放读出寄存器数据
  43   1      
  44   1        CSN = 0;          // CSN置低，开始传输数据
  45   1        SPI_RW(reg);        // 选择寄存器
  46   1        reg_value = SPI_RW(0x00); // 读出数据
  47   1        CSN = 1;          // CSN置高，结束数据传输
  48   1        return(reg_value);      // 返回reg寄存器值    
  49   1      }
  50          
  51          // SPI读bytes字节数据
  52          uchar SPI_Read_Buf(uchar reg,uchar *pBuf,uchar bytes)
  53          {
  54   1        uchar status,i;        
C51 COMPILER V9.06   NRF24L01_TX                                                           08/14/2017 21:12:42 PAGE 2   

  55   1        CSN = 0;           // CSN置低，开始传输数据
  56   1        status = SPI_RW(reg);    // 选择寄存器，同时返回状态字
  57   1        for(i = 0; i < bytes; i++)
  58   1          pBuf[i] = SPI_RW(0x00);  // 读出数据存放到数组
  59   1        CSN = 1;           // CSN置高，结束数据传输
  60   1        return(status);
  61   1      }
  62          
  63          //  SPI写bytes字节数据
  64          uchar SPI_Write_Buf(uchar reg,uchar *pBuf,uchar bytes)
  65          {
  66   1        uchar status,i;
  67   1        CSN = 0;           // CSN置低，开始传输数据
  68   1        status = SPI_RW(reg);    // 选择寄存器，同时返回状态字
  69   1        for(i = 0; i < bytes; i++)
  70   1          SPI_RW(*pBuf++);     // 数据写进寄存器
  71   1        CSN = 1;           // CSN置高，结束数据传输
  72   1        return(status);
  73   1      }
  74          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    154    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
