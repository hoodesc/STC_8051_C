C51 COMPILER V9.06   DS18B20                                                               11/18/2016 22:59:09 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Output\DS18B20.obj
COMPILER INVOKED BY: D:\Keil uV5\C51\BIN\C51.EXE source\DS18B20.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include) DEBUG 
                    -PRINT(.\Listing\DS18B20.lst) TABS(2) OBJECT(.\Output\DS18B20.obj)

line level    source

   1          #include <stc15.h>
   2          #include "MYTYPE.h"
   3          #include "DS18B20.h"
   4          #include "delay.h"
   5          #include "nrf24l01_tx.h"
   6          
   7          
   8          uchar code number[] = {'0','1','2','3','4','5','6','7','8','9'};
   9          uchar c[] = {'0','0','.','0',0xA1,0xE6,'\0'};
  10          //uchar c[] = {'0','0','.','0',0x00,0xB0,'\0'};
  11          sbit DQ = P3^3;
  12          bit DS18B20_flag = 0;
  13          
  14          void DS18B20_Write(uchar udata)
  15          {
  16   1        uchar i;
  17   1        uchar dat;
  18   1        for(i = 0; i < 8; i++)
  19   1        {
  20   2          dat = udata & 0x01;
  21   2          udata = udata >> 1;   // udata右移一位准备下一次送上总线
  22   2          if(dat)
  23   2          {
  24   3            DQ = 0;   // 拉低总线
  25   3            DelayUs(1); // 延时2us
  26   3            DQ = 1;   // 送1
  27   3            DelayUs(40);  // 延时80us
  28   3            DQ = 1;   // 释放总线
  29   3            DelayUs(1); // 延时2us
  30   3          }
  31   2          else
  32   2          {
  33   3            DQ = 0;   // 拉低总线
  34   3            DelayUs(1); // 延时2us
  35   3            DQ = 0;   // 送0
  36   3            DelayUs(40);  // 延时80us;
  37   3            DQ = 1;   // 释放总线
  38   3            DelayUs(1); // 延时2us;
  39   3          }
  40   2        } 
  41   1      }
  42          
  43          uchar DS18B20_Read()
  44          {
  45   1        uchar i;
  46   1        uchar udata = 0x00;
  47   1        for(i = 0; i < 8; i++)
  48   1        {
  49   2          udata = udata >> 1; // udata右移一位，第一次移位为空操作
  50   2          DQ = 0;     // 拉低总线
  51   2          DelayUs(2);   // 延时4us，产生读时隙
  52   2          DQ = 1;     // 拉高总线
  53   2          if(DQ)
  54   2            udata |= 0x80;    // 1：读DQ数据并存放在udata最高位
C51 COMPILER V9.06   DS18B20                                                               11/18/2016 22:59:09 PAGE 2   

  55   2          else
  56   2            udata |= 0x00;    // 0：读DQ数据并存放在udata最高位
  57   2          DelayUs(40);    // 延时80us
  58   2          DQ = 1;     // 释放总线
  59   2          DelayUs(1);   // 延时2us
  60   2        }
  61   1        return(udata);  
  62   1      }
  63          
  64          void DS18B20_Init()
  65          {
  66   1        DQ = 1;     // 拉高总线
  67   1        DelayUs(1);
  68   1        
  69   1        DQ = 0;     // 拉低总线
  70   1        DelayUs(350);   // 延时700us  
  71   1        DQ = 1;     // 释放总线
  72   1        DelayUs(15);    // 延时30us
  73   1        while(DQ);    // 等待DS18B20拉低总线
  74   1          //LED = 0;  // 复位成功，点亮LED
  75   1        DelayUs(100);   // 延时200us
  76   1        DQ = 1;     // 释放总线
  77   1        DelayUs(150);   // 延时300us
  78   1      }
  79          
  80          void compute(uchar lsb,uchar msb)
  81          {
  82   1        uchar ge,shi,bai;
  83   1        uint num;
  84   1        uint temp;
  85   1        num = msb;
  86   1        num  <<= 8;
  87   1        num |= lsb;
  88   1        temp = num*0.0625*10+0.5; 
  89   1        bai = temp/100;   
  90   1        shi = temp%100/10;  
  91   1        ge  = temp%100%10;  
  92   1        c[0] = number[bai];
  93   1        c[1] = number[shi];
  94   1        c[3] = number[ge];
  95   1      }
  96          void DS18B20_Temperature_Read()
  97          {
  98   1        uchar i;
  99   1        static uchar k = 0;
 100   1        // 初始化并启动温度转换
 101   1        DS18B20_Init();     // DS18B20初始化
 102   1        DS18B20_Write(0xCC);  // 跳过ROM地址
 103   1        DS18B20_Write(0x44);  // 启动温度转换
 104   1        if(!k)
 105   1        {
 106   2          k = 1;
 107   2          DelayMs(800);
 108   2        }
 109   1        else if(k)
 110   1        {
 111   2          for(i = 0; i < 4; i++)
 112   2          {
 113   3            SPI_RW_Reg(WRITE_REG + STATUS,0x7E);        //  清除状态寄存器
 114   3            SPI_Write_Buf(W_TX_PAYLOAD,TX_DAT,TX_PLOAD_WIDTH);  //  装载数据
 115   3            NRF24L01_TxPacket(TX_DAT);    //  发送
 116   3            DelayMs(50);
C51 COMPILER V9.06   DS18B20                                                               11/18/2016 22:59:09 PAGE 3   

 117   3          } 
 118   2        }
 119   1        // 初始化，读温度
 120   1        DS18B20_Init();     // DS18B20初始化
 121   1        DS18B20_Write(0xCC);  // 跳过ROM地址
 122   1        DS18B20_Write(0xBE);  // 读取RAM命令
 123   1        compute(DS18B20_Read(),DS18B20_Read());   //  先读低8位，再读高八位
 124   1        TX_DAT[1] = c[0];
 125   1        TX_DAT[2] = c[1]; 
 126   1        TX_DAT[3] = c[3]; 
 127   1      //  for(i = 0; i < 6; i++)  // 串口输出
 128   1      //  {
 129   1      //    SBUF = c[i];
 130   1      //    while(!TI);
 131   1      //    TI = 0;
 132   1      //  }
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    414    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
