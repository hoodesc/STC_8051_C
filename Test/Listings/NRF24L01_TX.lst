C51 COMPILER V9.06   NRF24L01_TX                                                           07/08/2016 10:06:16 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE NRF24L01_TX
OBJECT MODULE PLACED IN .\Output\NRF24L01_TX.obj
COMPILER INVOKED BY: d:\Keil uV4\C51\BIN\C51.EXE source code\NRF24L01_TX.c BROWSE INCDIR(..\Test;.\Include;.\source code
                    -) DEBUG OBJECTEXTEND PRINT(.\Listings\NRF24L01_TX.lst) OBJECT(.\Output\NRF24L01_TX.obj)

line level    source

   1          #include <stc12c2052ad.h>
   2          #include <stdio.h>
   3          #include "MYTYPE.h"
   4          #include "Delay.h"
   5          #include "NRF24L01_TX.h"
   6          #include "Ins_ADC.h"
   7          
   8          //NRF24L01 只 发送程序
   9          
  10          
  11          uchar const RX_ADDRESS[RX_ADR_WIDTH] = {0x12,0x21,0xaa,0x34,0x43};              // 接收地址
  12          uchar const TX_ADDRESS[TX_ADR_WIDTH] = {0x12,0x21,0xaa,0x34,0x43};              // 发送地址
  13          
  14                  
  15          // SPI位定义
  16          //sbit SCK  = P1^7;             // SPI时钟
  17          //sbit MISO = P1^6;             // 主出从入
  18          //sbit MOSI = P1^5;             // 主入从出
  19          //sbit CSN  = P1^4;             // 芯片片选，为低芯片工作
  20          //sbit IRQ  = P1^3;             // 中断信号
  21          //sbit CE   = P1^2;             // 芯片模式控制线
  22          
  23          //      SPI写一字节
  24          uchar SPI_RW(uchar dat)
  25          {
  26   1              uchar i;
  27   1              for(i = 0; i < 8; i++)
  28   1              {
  29   2                      MOSI = (dat&0x80);      // dat最高位放入数据线
  30   2                      dat = dat<<1;           // dat左移1位
  31   2                      SCK     = 1;                    // 拉高时钟，数据送入从机（上升沿读入）
  32   2                      dat |= MISO;            // 接收从机传来数据
  33   2                      SCK = 0;                        // 拉低时钟                              （下降沿输出）
  34   2              }
  35   1              return(dat);                    // 返回NRF24L01状态
  36   1      }
  37          
  38          //      SPI写寄存器值
  39          uchar SPI_RW_Reg(uchar reg,uchar value)
  40          {
  41   1              uchar status;
  42   1              CSN = 0;                                // CSN置低，开始传输数据
  43   1              status = SPI_RW(reg);   // 选择寄存器，同时返回状态字
  44   1              SPI_RW(value);                  // 写入数据到寄存器
  45   1              CSN = 1;                                // CSN置高，结束数据传输
  46   1              return(status);
  47   1      }
  48          
  49          //      SPI读一字节     
  50          uchar SPI_Read(uchar reg)
  51          {
  52   1              uchar reg_value;                        // 存放读出寄存器数据
  53   1      
  54   1              CSN = 0;                                        // CSN置低，开始传输数据
C51 COMPILER V9.06   NRF24L01_TX                                                           07/08/2016 10:06:16 PAGE 2   

  55   1              SPI_RW(reg);                            // 选择寄存器
  56   1              reg_value = SPI_RW(0x00);       // 读出数据
  57   1              CSN = 1;                                        // CSN置高，结束数据传输
  58   1              return(reg_value);                      // 返回reg寄存器值              
  59   1      }
  60          //
  61          //// SPI读bytes字节数据
  62          //uchar SPI_Read_Buf(uchar reg,uchar *pBuf,uchar bytes)
  63          //{
  64          //      uchar status,i;                          
  65          //      CSN = 0;                                         // CSN置低，开始传输数据
  66          //      status = SPI_RW(reg);            // 选择寄存器，同时返回状态字
  67          //      for(i = 0; i < bytes; i++)
  68          //              pBuf[i] = SPI_RW(0x00);  // 读出数据存放到数组
  69          //      CSN = 1;                                         // CSN置高，结束数据传输
  70          //      return(status);
  71          //}
  72          
  73          //      SPI写bytes字节数据
  74          uchar SPI_Write_Buf(uchar reg,uchar *pBuf,uchar bytes)
  75          {
  76   1              uchar status,i;
  77   1              CSN = 0;                                         // CSN置低，开始传输数据
  78   1              status = SPI_RW(reg);            // 选择寄存器，同时返回状态字
  79   1              for(i = 0; i < bytes;i++)
  80   1                      SPI_RW(*pBuf++);                        // 数据写进寄存器
  81   1              CSN = 1;                                         // CSN置高，结束数据传输
  82   1              return(status);
  83   1      }
  84          
  85          void NRF24L01_TX_Mode(void)
  86          {
  87   1              CE      = 0;    // 芯片使能                     
  88   1              CSN = 1;        // SPI失能      
  89   1              SCK = 0;        // 时钟初始化低电平
  90   1              SPI_RW_Reg(WRITE_REG + EN_AA,0x00);                     // 失能自动应答0~5
  91   1              SPI_RW_Reg(WRITE_REG + EN_RXADDR,0x00);         // 失接收通道0~5
  92   1              SPI_RW_Reg(WRITE_REG + SETUP_RETR,0x00);        // 失能自动重发
  93   1              SPI_RW_Reg(WRITE_REG + RF_CH,40);                               // 设置发射频率2.44GHz
  94   1              SPI_RW_Reg(WRITE_REG + RF_SETUP,0x07);                  // 设置低噪声放大器，发射功率0dBm，数据传输率1Mbps                      
  95   1      }
  96          
  97          void NRF24L01_TxPacket()
  98          {
  99   1              CE = 0;
 100   1              SPI_Write_Buf(WRITE_REG + TX_ADDR,TX_ADDRESS,TX_ADR_WIDTH);             //      写接收地址
 101   1              SPI_Write_Buf(WR_TX_PLOAD,ADC_DATA_temp,TX_PLOAD_WIDTH);                                //      装载数据
 102   1              SPI_RW_Reg(WRITE_REG + CONFIG,0x0E);    //      发送、上电模式、2字节CRC校验，IRQ收发完成中断
 103   1              CE = 1;
 104   1              DelayMs(1);
 105   1              //      延时10us以上，than 发送
 106   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    186    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.06   NRF24L01_TX                                                           07/08/2016 10:06:16 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
