C51 COMPILER V9.06   KEYSCAN                                                               11/09/2016 11:01:16 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE KEYSCAN
OBJECT MODULE PLACED IN .\Output\keyscan.obj
COMPILER INVOKED BY: D:\Keil uV4\C51\BIN\C51.EXE source code\keyscan.c BROWSE INCDIR(..\NRF24L01_RX;.\source code;.\Incl
                    -ude) DEBUG OBJECTEXTEND PRINT(.\Listings\keyscan.lst) OBJECT(.\Output\keyscan.obj)

line level    source

   1          #include <reg51.h>
   2          #include "mytype.h"
   3          #include "keyscan.h"
   4          #include "delay.h"
   5          
   6          sbit Key1 = P3^7;
   7          
   8          sbit A1 = P3^2;
   9          sbit B1 = P3^3;
  10          sbit C1 = P3^4;
  11          sbit D1 = P3^5;
  12          
  13          #define coil_A1 {A1 = 1;B1 = 0;C1 = 0;D1 = 0;}
  14          #define coil_B1 {A1 = 0;B1 = 1;C1 = 0;D1 = 0;}
  15          #define coil_C1 {A1 = 0;B1 = 0;C1 = 1;D1 = 0;} 
  16          #define coil_D1 {A1 = 0;B1 = 0;C1 = 0;D1 = 1;}
  17          #define coil_close {A1 = 0;B1 = 0;C1 = 0;D1 = 0;}
  18          
  19          void motor()
  20          {
  21   1              uchar i;
  22   1                      for(i = 0; i < 240; i++)
  23   1                      {
  24   2                              coil_A1;
  25   2                              DelayMs(20);
  26   2                              coil_B1;
  27   2                              DelayMs(20);
  28   2                              coil_C1;
  29   2                              DelayMs(20);
  30   2                              coil_D1;
  31   2                              DelayMs(20);            
  32   2                      
  33   2                      }
  34   1                      DelayMs(8000);
  35   1                      for(i = 0; i < 240; i++)
  36   1                      {
  37   2                              coil_D1;
  38   2                              DelayMs(20);
  39   2                              coil_C1;
  40   2                              DelayMs(20);
  41   2                              coil_B1;
  42   2                              DelayMs(20);
  43   2                              coil_A1;
  44   2                              DelayMs(20);                            
  45   2                      }
  46   1                      coil_close;                     
  47   1              }
  48          
  49          void Keyscan(void)
  50          {
  51   1              static uchar Key1_StateValue = 0;       //按键1状态标志
  52   1              static uchar Time = 0;
  53   1              uchar Key1_Value = Key1;                //获取按键1
  54   1              switch (Key1_StateValue)
C51 COMPILER V9.06   KEYSCAN                                                               11/09/2016 11:01:16 PAGE 2   

  55   1              {
  56   2                      case Init1_State:       //初始化状态
  57   2                      {
  58   3                              if(!Key1_Value)
  59   3                              {
  60   4                                      Key1_StateValue = Affirm1_State;        //下次进入确认状态
  61   4                              }       
  62   3                              else{Key1_StateValue = Init1_State;}    //否则进入初始化状态
  63   3                      }
  64   2                      break;
  65   2                      case Affirm1_State:     //确认状态
  66   2                      {
  67   3                              if(!Key1_Value)
  68   3                              {
  69   4                                      Time = 0;
  70   4                                      Key1_StateValue = Single1_State;        //下次进入单次触发状态
  71   4                              }
  72   3                              else{Key1_StateValue = Init1_State;}    //否则进入初始化状态
  73   3                      }
  74   2                      break;
  75   2                      case Single1_State:     //单次触发状态
  76   2                      {
  77   3                              Time++; //10ms 加一次
  78   3                              if(Key1_Value)  //如果按键放开，LED取反，回到初始状态
  79   3                              {
  80   4                                      motor();
  81   4                                      Key1_StateValue = Init1_State;                                  
  82   4                              }
  83   3                              else if(Time == 100)    //按下时间等于1S
  84   3                              {
  85   4                                      Time = 0;
  86   4                                      Key1_StateValue = Repeat1_State;
  87   4                              } 
  88   3                      }
  89   2                      break;
  90   2                      case Repeat1_State:     //连发状态
  91   2                      {
  92   3                              Time++;
  93   3                              if(10 == Time)
  94   3                              {
  95   4                                      Time = 0;
  96   4      //                              Led1 = ~Led1;
  97   4                              }
  98   3                              else if(Key1_Value)
  99   3                              {
 100   4                                      Key1_StateValue = Init1_State;
 101   4                              }                                       
 102   3                      }
 103   2                      break;
 104   2                      default:Key1_StateValue = Init1_State;
 105   2                      break;
 106   2                      }
 107   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    245    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       2
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.06   KEYSCAN                                                               11/09/2016 11:01:16 PAGE 3   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
