C51 COMPILER V9.06   IR                                                                    06/26/2016 17:43:19 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\IR.obj
COMPILER INVOKED BY: d:\Keil uV4\C51\BIN\C51.EXE IR.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\IR.lst) OBJECT(.\Object
                    -s\IR.obj)

line level    source

   1          #include <reg52.h>
   2          #include <stdio.h>
   3          // NEC红外解码
   4          // 11.0592
   5          typedef unsigned char uchar;
   6          typedef unsigned int uint;
   7          
   8          uint IR_conunt = 0;                     // 定时器计数
   9          uchar IR_time[33];
  10          uchar IR_data[4];
  11          sbit LED = P1^7;
  12          sbit LED2 = P1^6;
  13          
  14          bit conunt_ok = 0,decode_ok = 0;
  15          
  16          void Pro();
  17          
  18          void Uart_Init()        // 串口初始化
  19          {
  20   1              TMOD &= 0x0F;
  21   1              TMOD |= 0x20;                   // 定时器1 模式2 8位自动重装
  22   1              SCON |= 0x50;                   // 方式1、可接收
  23   1              TH1   = 0xFD;                   // 9600bps
  24   1              TL1   = 0xFD;
  25   1              ET1   = 0;                              // 关闭定时器1中短
  26   1              TR1   = 1;                              // 打开定时器1
  27   1      }
  28          
  29          void EX0_Init() // 外部中断0初始化
  30          {
  31   1              IT0 = 1;                                        // 下降沿触发
  32   1              EX0 = 1;                        // 开外部中断0
  33   1              EA  = 1;                          // 开总中断
  34   1      }
  35          void EX0_ISR() interrupt 0
  36          {
  37   1              static uchar num = 0;
  38   1              static bit start_flag = 0;
  39   1              if(!start_flag)
  40   1              {
  41   2                      start_flag = 1;
  42   2                      IR_conunt = 0;
  43   2              }
  44   1              else if(start_flag)
  45   1              {
  46   2                      if(IR_conunt >= 32 && IR_conunt < 50)           // 判断是否为9.5ms+4.5ms引导码
  47   2                              num = 0;
  48   2                      IR_time[num] = IR_conunt;
  49   2                      IR_conunt = 0;
  50   2                      num++;
  51   2                      if(33 == num)
  52   2                      {
  53   3                              num = 0;
  54   3                              start_flag = 0;                 // 第一次中断标志位
C51 COMPILER V9.06   IR                                                                    06/26/2016 17:43:19 PAGE 2   

  55   3                              conunt_ok = 1;                  // 红外码接收完毕
  56   3                      }
  57   2              }
  58   1      }
  59          
  60          void Timer0_Init()
  61          {
  62   1              TMOD &= 0xF0;
  63   1              TMOD |= 0x02;
  64   1              TH0   = 0x00;
  65   1              TL0   = 0x00;
  66   1              ET0   = 1;
  67   1              TR0   = 1;
  68   1      }
  69          void Timer0_ISR()       interrupt 1
  70          {
  71   1              IR_conunt++;                    // 256 * 12/11.0592  记一次数
  72   1      }
  73          
  74          void IR_decode()
  75          {
  76   1              uchar IR_byte;
  77   1              uchar i = 0,j = 0;
  78   1              uchar num = 1;
  79   1              for(i = 0; i < 4; i++)
  80   1              {
  81   2                      for(j = 0; j < 8; j++)
  82   2                      {
  83   3                              if(IR_time[num] > 6)
  84   3                              {
  85   4                                      IR_byte |= 0x80;
  86   4                              }
  87   3                              else
  88   3                              {
  89   4                                      IR_byte = IR_byte;
  90   4                              }
  91   3                              if(j < 7)
  92   3                                      IR_byte >>= 1;
  93   3                              num++;                  
  94   3                      }
  95   2                      IR_data[i] = IR_byte;
  96   2                      IR_byte = 0x00;
  97   2              }
  98   1              if(IR_data[2] == ~IR_data[3])
  99   1              {
 100   2                      decode_ok = 1;
 101   2              }
 102   1      }
 103          
 104          void Pro()
 105          {
 106   1              if(IR_data[2] == 0x45)
 107   1              {
 108   2                      IR_data[2] = 0x00;
 109   2                      LED = ~LED;     
 110   2              }
 111   1              else if(IR_data[2] == 0x46)
 112   1              {
 113   2                      IR_data[2] = 0x00;
 114   2                      LED2 = ~LED2;   
 115   2              }
 116   1      }
C51 COMPILER V9.06   IR                                                                    06/26/2016 17:43:19 PAGE 3   

 117          
 118          void main()
 119          {
 120   1              uchar i;
 121   1              Uart_Init();
 122   1              Timer0_Init();
 123   1              EX0_Init();
 124   1              LED = 1;
 125   1              while(1)
 126   1              {
 127   2                      if(conunt_ok)                   // 获取时间值是否完毕
 128   2                      {
 129   3                              conunt_ok = 0;
 130   3                              IR_decode();            // 执行解码程序
 131   3                              
 132   3                              for(i = 0; i < 33; i++)                 // 串口输出
 133   3                              {
 134   4                                      TI = 1;
 135   4                                      printf("%d",(uint)IR_time[i]);
 136   4                                      while(!TI);
 137   4                                      TI = 0;
 138   4                              }                               
 139   3                                      TI = 1;
 140   3                                      printf("\n");
 141   3                                      while(!TI);
 142   3                                      TI = 0; 
 143   3                              
 144   3                                      for(i = 0; i < 4; i++)                  // 串口输出
 145   3                                      {
 146   4                                              TI = 1;
 147   4                                              printf("%x\n",(uint)IR_data[i]);
 148   4                                              while(!TI);
 149   4                                              TI = 0;
 150   4                                      }
 151   3                      }
 152   2                      
 153   2                      if(decode_ok)                   // 解码是否完毕
 154   2                      {
 155   3                              decode_ok = 0;
 156   3                              if(IR_data[2] == 0x03 && IR_data[3] == 0xfc)
 157   3                              {
 158   4                                      P1 = ~P1;
 159   4                              }
 160   3                      }
 161   2                      Pro();          
 162   2              }
 163   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    354    ----
   CONSTANT SIZE    =      9    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
