C51 COMPILER V9.06   IIC_AT24C02                                                           07/30/2017 21:27:59 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE IIC_AT24C02
OBJECT MODULE PLACED IN IIC_AT24C02.OBJ
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE IIC_AT24C02.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <reg52.h>
   2          #include <stdio.h>
   3          #include <intrins.h>
   4          //MCU:STC12C2052AD
   5          //晶振:11.0592Mhz
   6          //检测开机次数
   7          typedef unsigned char uchar;
   8          typedef unsigned int uint;
   9          
  10          sbit SDA = P1^7;
  11          sbit SCL = P1^6;
  12          
  13          uchar udata[20] = {0x00};
  14          /*        Uart串口初始化        */
  15          void Uart_Init()  // 串口初始化
  16          {
  17   1        TMOD &= 0x0F; // 保留后定时器0设置，清空定时器1设置
  18   1        TMOD |= 0x20; // 定时器1 模式2
  19   1        SCON |= 0x50; // 串口方式1，8位UART波特率可变，可接收
  20   1        TH1   = 0xFD; // TL1溢出后将TH1的值装入
  21   1        TL1   = 0xFD; // 9600bps
  22   1        ET1   = 0;    // 关闭定时器1中断
  23   1        TR1   = 1;    // 开定时器1
  24   1      }
  25          /**********************************/
  26          /*        约5us延时函数       */
  27          void Delay5us(void)   // 4个机器周期延时，大约5us
  28          {
  29   1        uchar i;
  30   1        for(i = 0; i < 4; i++)
  31   1          _nop_();
  32   1      }
  33          /**********************************/
  34          /*        毫秒延时函数        */
  35          void DelayMs(uchar ms)  
  36          {
  37   1        int i,j;
  38   1        for(i = 0; i < ms; i++)
  39   1          for(j = 0; j < 936; j++);
  40   1      }
  41          /**********************************/
  42          /*        读到的字节保存到数组      */
  43          void uData(uchar dat)
  44          {
  45   1        static uchar i = 0;
  46   1        udata[i] = dat;
  47   1        i++;
  48   1        if(20 == i)
  49   1          i = 0;
  50   1      }
  51          /**********************************/
  52          /*      IIC起始信号           */
  53          void IIC_Start()
  54          {
  55   1        SDA = 1;
C51 COMPILER V9.06   IIC_AT24C02                                                           07/30/2017 21:27:59 PAGE 2   

  56   1        Delay5us();
  57   1        SCL = 1;
  58   1        Delay5us();
  59   1        SDA = 0;
  60   1        Delay5us();
  61   1      }
  62          /**********************************/
  63          /*      IIC停止信号           */
  64          void IIC_Stop()
  65          {
  66   1        SDA = 0;
  67   1        Delay5us();
  68   1        SCL = 1;
  69   1        Delay5us();
  70   1        SDA = 1;
  71   1        Delay5us();
  72   1      }
  73          /**********************************/
  74          /*      ACK应答信号           */
  75          void IIC_Ack()
  76          {
  77   1        SCL = 0;
  78   1        SDA = 0;
  79   1        SCL = 1;
  80   1        Delay5us();
  81   1        SCL = 0;
  82   1        SDA = 1;    // 释放总线
  83   1      }
  84          /**********************************/
  85          /*      ACK否应答信号         */
  86          void IIC_noAck()
  87          {
  88   1        SCL = 0;
  89   1        SDA = 1;
  90   1        SCL = 1;
  91   1        Delay5us();
  92   1        SCL = 0;
  93   1        SDA = 1;    // 释放总线
  94   1      }
  95          /**********************************/
  96          /*      读ACK应答信号          */
  97          bit IIC_Rd_Ack()
  98          {
  99   1        bit ACK;
 100   1        uchar i = 0;
 101   1        SCL = 1;
 102   1        Delay5us();
 103   1        while((1 == SDA) && (i < 255))    
 104   1          i++;  
 105   1        ACK = SDA;
 106   1        SCL = 0;
 107   1        Delay5us();
 108   1        return ACK;
 109   1      }
 110          /**********************************/
 111          /*      IIC一字节写入         */
 112          void IIC_Send_Byte(uchar dat)       
 113          {
 114   1        uchar i;
 115   1        for(i = 0; i < 8; i++)
 116   1        {
 117   2          SCL = 0;
C51 COMPILER V9.06   IIC_AT24C02                                                           07/30/2017 21:27:59 PAGE 3   

 118   2          Delay5us();
 119   2          SDA = (dat & 0x80) >> 7;
 120   2          Delay5us();
 121   2          SCL = 1;
 122   2          Delay5us();
 123   2          dat <<= 1;
 124   2        }
 125   1        SCL = 0;
 126   1        SDA = 1;    // 释放总线
 127   1        Delay5us();
 128   1      }
 129          /**********************************/
 130          /*      IIC一字节读出         */
 131          uchar IIC_receive_Byte()
 132          {
 133   1        uchar i;
 134   1        uchar dat = 0;
 135   1        for(i = 0; i < 8; i++)
 136   1        {
 137   2          SCL = 0;
 138   2          Delay5us();
 139   2          SCL = 1;
 140   2          Delay5us();
 141   2          dat <<= 1;
 142   2          if(SDA)
 143   2            dat |= 0x01;  
 144   2        }
 145   1        uData(dat);
 146   1        SCL = 0;
 147   1        return dat;
 148   1      }
 149          /**********************************/
 150          /*      AT24C02连续写入         */
 151          void IIC_WrData(uchar DeviceAdd,uchar FirstAdds,uchar dat,uchar nLen) 
 152          { //          器件地址      子地址      8位数据   写次数
 153   1        //开始；器件地址+写、读应答；子地址、读应答；数据、读应答；结束
 154   1        uchar i;
 155   1        IIC_Start();          // 开始
 156   1        IIC_Send_Byte(DeviceAdd); // 写器件地址 默认：1010 A2A1A0+w/r  写
 157   1        IIC_Rd_Ack();       // 读应答
 158   1        IIC_Send_Byte(FirstAdds); // 写器件子地址
 159   1        IIC_Rd_Ack();       // 读应答
 160   1        for(i = 0; i < nLen; i++) // 连续写nLen次
 161   1        {
 162   2          IIC_Send_Byte(dat);   // 写一字节数据
 163   2          IIC_Rd_Ack();     // 读应答
 164   2        }
 165   1        IIC_Stop();           // 结束
 166   1      }
 167          /**********************************/
 168          /*      AT24C02连续读出         */
 169          void IIC_RdData(uchar DeviceAdd,uchar FirstAdds,uchar nLen)       
 170          { //          器件地址        子地址      读次数
 171   1        //开始 - 器件地址+写、读应答 - 子地址、读应答 - 开始 - 器件地址、读应答 - 读数据、写否应答 - 结束
 172   1        uchar i;
 173   1        IIC_Start();                // 开始
 174   1        IIC_Send_Byte(DeviceAdd);       // 写待读器件地址 默认：1010 A2A1A0+w/r   写
 175   1        IIC_Rd_Ack();             // 读应答
 176   1        IIC_Send_Byte(FirstAdds);       // 写待读器件子地址 
 177   1        IIC_Rd_Ack();             // 读应答
 178   1        IIC_Start();                // 开始
 179   1        IIC_Send_Byte(DeviceAdd |= 0x01);   // 写器件地址最后一位改为1，即“读”
C51 COMPILER V9.06   IIC_AT24C02                                                           07/30/2017 21:27:59 PAGE 4   

 180   1        IIC_Rd_Ack();             // 读应答
 181   1        for(i = 0; i < nLen; i++)
 182   1        {
 183   2          IIC_receive_Byte();         // 读一字节数据
 184   2          if(nLen-1 == i)           // 如果最后一个地址数据读完 写否应答
 185   2            IIC_noAck();
 186   2          else                // 否则 写应答
 187   2            IIC_Ack();
 188   2        } 
 189   1        IIC_Stop();                 // 结束 
 190   1      }
 191          /**********************************/
 192          /*      主函数          */
 193          void main()
 194          { 
 195   1        Uart_Init();
 196   1        IIC_RdData(0xA0,0xFF,1);      //器件地址  子地址  读次数
 197   1        udata[0] = udata[0] + 0x01;
 198   1        DelayMs(5);
 199   1        IIC_WrData(0xA0,0xFF,udata[0],1); //器件地址  子地址  8位数据   写次数
 200   1      
 201   1        TI = 1;
 202   1        printf("累计开机:%d次\n",(uint)udata[0]);
 203   1        while(!TI);
 204   1        TI = 0;
 205   1        while(1);
 206   1      }
 207          /**********************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    401    ----
   CONSTANT SIZE    =     15    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
